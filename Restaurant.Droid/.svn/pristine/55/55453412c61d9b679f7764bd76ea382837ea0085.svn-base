using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Android.App;
using Android.Content;
using Android.OS;
using Android.Runtime;
using Android.Views;
using Android.Widget;
using Java.Util;
using static com.resturant.Droid.Resturant.Config.BaseURL;

namespace com.resturant.Droid
{
    public class Session_management
    {

        ISharedPreferences prefs;
        ISharedPreferences prefs2;

        ISharedPreferencesEditor editor;
        ISharedPreferencesEditor editor2;
        ISharedPreferencesEditor editor3;

        Context context;

        public Session_management(Context context)
        {

            this.context = context;
            prefs = context.GetSharedPreferences(PREFS_NAME, FileCreationMode.Private);
            editor = prefs.Edit();

            prefs2 = context.GetSharedPreferences(PREFS_NAME2, FileCreationMode.Private);
            editor2 = prefs2.Edit();

        }

        public void createLoginSession(string id,string  email, string name, string mobile, string password)
        {

            editor.PutBoolean(IS_LOGIN, true);
            editor.PutString(KEY_ID, id);
            editor.PutString(KEY_EMAIL, email);
            editor.PutString(KEY_NAME, name);
            editor.PutString(KEY_MOBILE, mobile);
            editor.PutString(KEY_PASSWORD, password);
            editor.Commit();
        }

        public void createotpSession(string useremail, string username, string user_phone)
        {

            editor.PutBoolean(IS_LOGIN, true);
            editor.PutString(KEY_EMAIL, useremail);
            editor.PutString(KEY_NAME, username);
            editor.PutString(KEY_MOBILE, user_phone);

            editor.Commit();
        }

        public void createsignupSession(string id)
        {

            editor.PutBoolean(IS_LOGIN, true);
            editor.PutString(KEY_ID, id);

            editor.Commit();
        }

        public void checkLogin()
        {
            if (!this.isLoggedIn())
            {
                Intent loginsucces = new Intent(context, typeof(LoginActivity));
                // Closing all the Activities
                loginsucces.AddFlags(ActivityFlags.ClearTop);

                // Add new Flag to start new Activity
                loginsucces.SetFlags(ActivityFlags.NewTask);

                context.StartActivity(loginsucces);
            }

        }

        public HashMap getUserDetails()
        
        
        {
            HashMap user = new HashMap();

            user.Put(KEY_ID, prefs.GetString(KEY_ID, null));
            user.Put(KEY_EMAIL, prefs.GetString(KEY_EMAIL, null));
            user.Put(KEY_NAME, prefs.GetString(KEY_NAME, null));
            user.Put(KEY_MOBILE, prefs.GetString(KEY_MOBILE, null));
            user.Put(KEY_IMAGE, prefs.GetString(KEY_IMAGE, null));
            user.Put(KEY_WALLET_Ammount, prefs.GetString(KEY_WALLET_Ammount, null));
            user.Put(KEY_REWARDS_POINTS, prefs.GetString(KEY_REWARDS_POINTS, null));
            user.Put(KEY_PAYMENT_METHOD, prefs.GetString(KEY_PAYMENT_METHOD, ""));
            user.Put(TOTAL_AMOUNT, prefs.GetString(TOTAL_AMOUNT, null));
            user.Put(KEY_PINCODE, prefs.GetString(KEY_PINCODE, null));
            user.Put(KEY_SOCITY_ID, prefs.GetString(KEY_SOCITY_ID, null));
            user.Put(KEY_SOCITY_NAME, prefs.GetString(KEY_SOCITY_NAME, null));
            user.Put(KEY_HOUSE, prefs.GetString(KEY_HOUSE, null));
            user.Put(KEY_PASSWORD, prefs.GetString(KEY_PASSWORD, null));

            // return user
            return user;
        }

        public void updateData(string name, string mobile, string pincode, string socity_id, string image, string wallet, string rewards, string house)
        {

            editor.PutString(KEY_NAME, name);
            editor.PutString(KEY_MOBILE, mobile);
            editor.PutString(KEY_PINCODE, pincode);
            editor.PutString(KEY_SOCITY_ID, socity_id);
            editor.PutString(KEY_IMAGE, image);
            editor.PutString(KEY_WALLET_Ammount, wallet);
            editor.PutString(KEY_REWARDS_POINTS, rewards);
            editor.PutString(KEY_HOUSE, house);

            editor.Apply();
        }

        public void updateSocity(String socity_name, String socity_id)
        {
            editor.PutString(KEY_SOCITY_NAME, socity_name);
            editor.PutString(KEY_SOCITY_ID, socity_id);

            editor.Apply();
        }

        public void logoutSession()
        {
            editor.Clear();
            editor.Commit();

            cleardatetime();

            Intent logout = new Intent(context, typeof(MainActivity));
            // Closing all the Activities
            logout.AddFlags(ActivityFlags.ClearTop);

            // Add new Flag to start new Activity
            logout.SetFlags(ActivityFlags.NewTask);

            context.StartActivity(logout);
        }

        public void logoutSessionwithchangepassword()
        {
            editor.Clear();
            editor.Commit();

            cleardatetime();

            Intent logout = new Intent(context, typeof(LoginActivity));
            // Closing all the Activities
            logout.AddFlags(ActivityFlags.ClearTop);

            // Add new Flag to start new Activity
            logout.SetFlags(ActivityFlags.NewTask);

            context.StartActivity(logout);
        }

        public void creatdatetime(String date, String time)
        {
            editor2.PutString(KEY_DATE, date);
            editor2.PutString(KEY_TIME, time);

            editor2.Commit();
        }

        public void cleardatetime()
        {
            editor2.Clear();
            editor2.Commit();
        }

        public Java.Util.HashMap getdatetime()
        {
            Java.Util.HashMap user = new Java.Util.HashMap();

            user.Put(KEY_DATE, prefs2.GetString(KEY_DATE, null));
            user.Put(KEY_TIME, prefs2.GetString(KEY_TIME, null));

            return user;
        }

        // Get Login State
        public bool isLoggedIn()
        {
            return prefs.GetBoolean(IS_LOGIN, false);
        }

    }
}